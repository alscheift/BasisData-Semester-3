-- NOTE:
-- Jalankan View, Procedure, dan Function sesuai urutan yang ada di file ini


USE SMP;
-- DROP VIEW
DROP VIEW IF EXISTS GURU_MAPEL;
DROP VIEW IF EXISTS SISWA_PERKELAS;
DROP VIEW IF EXISTS GURU_WALIKELAS;
DROP VIEW IF EXISTS SISWA_NONAKADEMIK;
DROP VIEW IF EXISTS SISWA_PERLOMBAAN;
DROP VIEW IF EXISTS SISWA_LULUS_NILAI;
DROP VIEW IF EXISTS DATA_SISWA_KELUAR;
DROP VIEW IF EXISTS SISWA_PRESENSI;
DROP VIEW IF EXISTS SISWA_TOP_ANGKATAN2020;
DROP VIEW IF EXISTS SISWA_TOP_ANGKATAN2021;
DROP VIEW IF EXISTS SISWA_TOP_ANGKATAN2022;

-- DROP FUNCTION
DROP FUNCTION IF EXISTS dbo.TotalUH;
DROP FUNCTION IF EXISTS dbo.TotalTugas;
DROP FUNCTION IF EXISTS dbo.HitungPresensi;

-- DROP PROCEDURE
DROP PROCEDURE IF EXISTS RAPOR_SISWA;

--DROP TRIGGER
DROP TRIGGER IF EXISTS NilaiAkhir;
DROP TRIGGER IF EXISTS NilaiAkhirUH;
DROP TRIGGER IF EXISTS NilaiAkhirTugas;

-- FUNCTION
-- FUNGSI Menghitung absensi
CREATE FUNCTION HitungPresensi (@KetPresensi NVARCHAR(6), @Smt Tinyint, @Nis INT)
RETURNS INT
AS
BEGIN
RETURN (SELECT COUNT(DP.Kehadiran)
		FROM DATA_PRESENSI DP
		WHERE DP.Kehadiran=@KetPresensi AND DP.Semester=@Smt AND DP.FK_NIS=@Nis
		GROUP BY DP.FK_NIS)
END

-- FUNGSI TOTAL UH 
-- menghitung nilai rata-rata tugas
CREATE FUNCTION TotalUH (@IdNilai INT)
RETURNS DECIMAL(5,2)
AS
BEGIN
RETURN(SELECT SUM(UH.Nilai)/MAX(UH.UH_Ke)
	FROM NILAI_UH UH
	WHERE UH.FK_DataNilai = @IdNilai)
END

-- FUNGSI TOTAL TUGAS
-- menghitung nilai rata-rata tugas
CREATE FUNCTION TotalTugas (@IdNilai INT)
RETURNS DECIMAL(5,2)
AS
BEGIN
RETURN(SELECT SUM(NT.Nilai)/MAX(NT.Tugas_Ke)
	FROM NILAI_TUGAS NT
	WHERE NT.FK_DataNilai = @IdNilai)
END


-- TRIGGER

-- TRIGGER TOTAL NILAI AKHIR
-- trigger after input / update UTS
CREATE TRIGGER NilaiAkhir
ON DATA_NILAI
AFTER INSERT, UPDATE
AS
BEGIN 
	UPDATE DATA_NILAI SET NilaiAkhirMapelDiSmt = (UTS+UAS)/2
END

-- TRIGGER TOTAL NILAI AKHIR UH
CREATE TRIGGER NilaiAkhirUH
ON NILAI_UH
AFTER INSERT, UPDATE
AS
BEGIN 
	UPDATE DATA_NILAI SET NilaiAkhirMapelDiSmt = (UAS+UTS+dbo.TotalUH(IdNilai))/3
END

-- TRIGGER TOTAL NILAI AKHIR TUGAS
CREATE TRIGGER NilaiAkhirTugas
ON NILAI_TUGAS
AFTER INSERT, UPDATE
AS
BEGIN 
	UPDATE DATA_NILAI SET NilaiAkhirMapelDiSmt = (UAS+UTS+dbo.TotalUH(IdNilai)+dbo.totalTugas(IdNilai))/4
END


-- VIEW
-- TABLE DATA GURU DAN NAMA MAPEL YANG DIAJAR
CREATE VIEW GURU_MAPEL AS
SELECT P_Mpl.NIK_Guru, G.Nama, M.NamaMapel 
FROM MENGAJAR_MAPEL P_Mpl, GURU G, MAPEL M
where P_Mpl.IdMapel=m.IdMapel and P_Mpl.NIK_Guru=G.NIK;
--SELECT * FROM GURU_MAPEL;

-- TABLE DATA SISWA MASING-MASING KELAS
CREATE VIEW SISWA_PERKELAS AS
SELECT S.NIS, S.Nama, K.Tingkat, K.NamaKelas
FROM SISWA S, SISWA_AKTIF SA, KELAS K
WHERE S.NIS = SA.NIS AND SA.FK_IdKelas = K.IdKelas
--SELECT * FROM SISWA_PERKELAS;

-- TABLE DATA GURU YANG MENJADI WALI KELAS
CREATE VIEW GURU_WALIKELAS AS
SELECT G.Nama, G.Jabatan, K.NamaKelas, K.Tingkat
FROM GURU G, KELAS K
WHERE G.NIK = K.NIK_Wali
--SELECT * FROM GURU_WALIKELAS;

-- TABLE DATA SISWA YANG MENGIKUTI ORGANISASI DAN EKSTRAKURIKULER
CREATE VIEW SISWA_NONAKADEMIK AS
SELECT S.NIS, S.Nama, KN.NamaKegiatan
FROM SISWA S, KEGIATAN_NONAKADEMIK KN, PARTISIPASI_NONAKADEMIK PN
WHERE S.NIS = PN.NIS_Siswa AND PN.IdKegiatan = KN.IdKegiatan
--SELECT * FROM SISWA_NONAKADEMIK;

-- TABLE SISWA YANG MENGIKUTI LOMBA
CREATE VIEW SISWA_PERLOMBAAN AS
SELECT S.NIS, S.Nama, P.NamaLomba, P.KetPartisipasi, P.Tingkatan, G.Nama AS NamaGuru
FROM SISWA S, PARTISIPASI_LOMBA PL, PERLOMBAAN P, GURU G
WHERE S.NIS = PL.NIS_Siswa AND P.IdLomba = PL.IdLomba AND G.NIK = P.FK_NIKPembina
--SELECT * FROM SISWA_PERLOMBAAN;

-- TABLE DATA SISWA LULUS DAN RATA-RATA NILAI AKHIR TOTAL SEMESTER
CREATE VIEW SISWA_LULUS_NILAI AS
SELECT SL.NIS, S.Nama, ((SUM(DN.NilaiAkhirMapelDiSmt)/6)/10) AS [Nilai Rata-Rata Akhir]
FROM SISWA S, SISWA_LULUS SL, DATA_NILAI DN, MAPEL M
WHERE SL.NIS = S.NIS AND S.NIS = DN.FK_NIS AND M.IdMapel = DN.FK_Mapel
GROUP BY S.Nama, SL.NIS
--SELECT * FROM SISWA_LULUS_NILAI;

-- TABLE DATA SISWA KELUAR
CREATE VIEW DATA_SISWA_KELUAR AS
SELECT S.NIS, S.Nama, SK.TanggalKeluar
FROM SISWA S, SISWA_KELUAR SK
WHERE S.NIS = SK.NIS
--SELECT * FROM DATA_SISWA_KELUAR;

-- TABLE MENAMPILAN DATA PRESENSI SELURUH SISWA (SISWA AKTIF DAN LULUS
CREATE VIEW SISWA_PRESENSI AS
SELECT DISTINCT S.NIS, S.Nama, dbo.HitungPresensi(N'Hadir', DP.Semester, DP.FK_NIS) AS [Jumlah_Hadir], 
	dbo.HitungPresensi(N'Izin', DP.Semester, DP.FK_NIS) AS [Jumlah_Izin],
	dbo.HitungPresensi(N'Sakit', DP.Semester, DP.FK_NIS) AS [Jumlah_Sakit], 
	dbo.HitungPresensi(N'Alfa', DP.Semester, DP.FK_NIS) AS [Jumlah_Alfa],
	DP.Semester
FROM SISWA S, DATA_PRESENSI DP
WHERE DP.FK_NIS = S.NIS

-- TOP 3 SISWA TIAP ANGKATAN
-- ANGKATAN 2020
CREATE VIEW SISWA_TOP_ANGKATAN2020
AS
SELECT TOP(3) SA.NIS, S.Nama, (SUM(DN.NilaiAkhirMapelDiSmt)/MAX(DN.Semester))/10 AS [NilaiAkhir_Angkatan2020]
FROM SISWA S JOIN SISWA_AKTIF SA ON S.NIS = SA.NIS
			JOIN DATA_NILAI DN ON DN.FK_NIS = SA.NIS
WHERE DN.FK_NIS IN (SELECT S.NIS
					FROM SISWA S, SISWA_AKTIF SA
					WHERE S.NIS = SA.NIS AND S.TanggalMasuk = '2020-01-01'
					)
GROUP BY SA.NIS, DN.FK_NIS, S.Nama
ORDER BY [NilaiAkhir_Angkatan2020] DESC

--SELECT * FROM SISWA_TOP_ANGKATAN2020;

-- ANGKATAN 2021
CREATE VIEW SISWA_TOP_ANGKATAN2021
AS
SELECT TOP(3) SA.NIS, S.Nama, (SUM(DN.NilaiAkhirMapelDiSmt)/MAX(DN.Semester))/10 AS [NilaiAkhir_Angkatan2021]
FROM SISWA S JOIN SISWA_AKTIF SA ON S.NIS = SA.NIS
			JOIN DATA_NILAI DN ON DN.FK_NIS = SA.NIS
WHERE DN.FK_NIS IN (SELECT S.NIS
					FROM SISWA S, SISWA_AKTIF SA
					WHERE S.NIS = SA.NIS AND S.TanggalMasuk = '2021-01-01'
					)
GROUP BY SA.NIS, DN.FK_NIS, S.Nama
ORDER BY [NilaiAkhir_Angkatan2021] DESC

--SELECT * FROM SISWA_TOP_ANGKATAN2021;

-- ANGKATAN 2022
CREATE VIEW SISWA_TOP_ANGKATAN2022
AS
SELECT TOP(3) SA.NIS, S.Nama, (SUM(DN.NilaiAkhirMapelDiSmt)/MAX(DN.Semester))/10 AS [NilaiAkhir_Angkatan2022]
FROM SISWA S JOIN SISWA_AKTIF SA ON S.NIS = SA.NIS
			JOIN DATA_NILAI DN ON DN.FK_NIS = SA.NIS
WHERE DN.FK_NIS IN (SELECT S.NIS
					FROM SISWA S, SISWA_AKTIF SA
					WHERE S.NIS = SA.NIS AND S.TanggalMasuk = '2022-01-01'
					)
GROUP BY SA.NIS, DN.FK_NIS, S.Nama
ORDER BY [NilaiAkhir_Angkatan2022] DESC
--SELECT * FROM SISWA_TOP_ANGKATAN2022;

-- PROCEDURE
-- PROSEDUR RAPORT SISWA PER SMT DAN TIAP MAPEL DENGAN DATA PRESENSI
CREATE PROCEDURE RAPOR_SISWA (@NisSiswa INT, @SemesterSiswa INT)
AS
BEGIN
SELECT DISTINCT S.NIS, S.Nama, K.NamaKelas, DN.Semester, DN.NilaiAkhirMapelDiSmt, M.NamaMapel, SP.Jumlah_Hadir, SP.Jumlah_Izin, SP.Jumlah_Sakit, SP.Jumlah_Alfa
FROM SISWA S, SISWA_PERKELAS K, DATA_NILAI DN, MAPEL M, SISWA_PRESENSI SP
WHERE S.NIS = DN.FK_NIS AND K.NIS = S.NIS AND M.IdMapel = DN.FK_Mapel AND S.NIS = SP.NIS AND DN.Semester = @SemesterSiswa AND S.NIS = @NisSiswa
END;
-- EXEC RAPOR_SISWA 10, 3 


--DROP PROCEDURE IF EXISTS RAPOR_SISWA;
-- PROCEDURE
-- PROSEDUR RAPORT SISWA PER SMT DAN TIAP MAPEL DENGAN DATA PRESENSI
CREATE PROCEDURE RAPOR_SISWA (@NisSiswa INT, @SemesterSiswa INT)
AS
BEGIN
SELECT DISTINCT S.NIS, S.Nama, DN.Semester, DN.NilaiAkhirMapelDiSmt, M.NamaMapel, SP.Jumlah_Hadir, SP.Jumlah_Izin, SP.Jumlah_Sakit, SP.Jumlah_Alfa
FROM SISWA S, DATA_NILAI DN, MAPEL M, SISWA_PRESENSI SP
WHERE S.NIS = DN.FK_NIS AND M.IdMapel = DN.FK_Mapel AND S.NIS = SP.NIS AND DN.Semester = @SemesterSiswa AND S.NIS = @NisSiswa
END;